// Code generated by protoc-gen-go. DO NOT EDIT.
// source: processor.proto

package processor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A Sensor is generated in response to a Start rpc
//
// It contains value, type, and identifier to be later sent to processor
type Sensor struct {
	SensorValue          float32              `protobuf:"fixed32,1,opt,name=sensor_value,json=sensorValue,proto3" json:"sensor_value,omitempty"`
	SensorType           string               `protobuf:"bytes,2,opt,name=sensor_type,json=sensorType,proto3" json:"sensor_type,omitempty"`
	Id1                  string               `protobuf:"bytes,3,opt,name=id1,proto3" json:"id1,omitempty"`
	Id2                  int32                `protobuf:"fixed32,4,opt,name=id2,proto3" json:"id2,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sensor) Reset()         { *m = Sensor{} }
func (m *Sensor) String() string { return proto.CompactTextString(m) }
func (*Sensor) ProtoMessage()    {}
func (*Sensor) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{0}
}

func (m *Sensor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sensor.Unmarshal(m, b)
}
func (m *Sensor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sensor.Marshal(b, m, deterministic)
}
func (m *Sensor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sensor.Merge(m, src)
}
func (m *Sensor) XXX_Size() int {
	return xxx_messageInfo_Sensor.Size(m)
}
func (m *Sensor) XXX_DiscardUnknown() {
	xxx_messageInfo_Sensor.DiscardUnknown(m)
}

var xxx_messageInfo_Sensor proto.InternalMessageInfo

func (m *Sensor) GetSensorValue() float32 {
	if m != nil {
		return m.SensorValue
	}
	return 0
}

func (m *Sensor) GetSensorType() string {
	if m != nil {
		return m.SensorType
	}
	return ""
}

func (m *Sensor) GetId1() string {
	if m != nil {
		return m.Id1
	}
	return ""
}

func (m *Sensor) GetId2() int32 {
	if m != nil {
		return m.Id2
	}
	return 0
}

func (m *Sensor) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// ProcessResponse returns total data processed
type ProcessResponse struct {
	Total                int32    `protobuf:"fixed32,1,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessResponse) Reset()         { *m = ProcessResponse{} }
func (m *ProcessResponse) String() string { return proto.CompactTextString(m) }
func (*ProcessResponse) ProtoMessage()    {}
func (*ProcessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{1}
}

func (m *ProcessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResponse.Unmarshal(m, b)
}
func (m *ProcessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResponse.Marshal(b, m, deterministic)
}
func (m *ProcessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResponse.Merge(m, src)
}
func (m *ProcessResponse) XXX_Size() int {
	return xxx_messageInfo_ProcessResponse.Size(m)
}
func (m *ProcessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResponse proto.InternalMessageInfo

func (m *ProcessResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

// SensorFilter specify filters available
type SensorFilter struct {
	Id1                  string               `protobuf:"bytes,1,opt,name=id1,proto3" json:"id1,omitempty"`
	Id2                  int32                `protobuf:"fixed32,2,opt,name=id2,proto3" json:"id2,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SensorFilter) Reset()         { *m = SensorFilter{} }
func (m *SensorFilter) String() string { return proto.CompactTextString(m) }
func (*SensorFilter) ProtoMessage()    {}
func (*SensorFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{2}
}

func (m *SensorFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorFilter.Unmarshal(m, b)
}
func (m *SensorFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorFilter.Marshal(b, m, deterministic)
}
func (m *SensorFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorFilter.Merge(m, src)
}
func (m *SensorFilter) XXX_Size() int {
	return xxx_messageInfo_SensorFilter.Size(m)
}
func (m *SensorFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorFilter.DiscardUnknown(m)
}

var xxx_messageInfo_SensorFilter proto.InternalMessageInfo

func (m *SensorFilter) GetId1() string {
	if m != nil {
		return m.Id1
	}
	return ""
}

func (m *SensorFilter) GetId2() int32 {
	if m != nil {
		return m.Id2
	}
	return 0
}

func (m *SensorFilter) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// SensorPagination defines pagination specification
type SensorPagination struct {
	ItemPerPage          int32    `protobuf:"fixed32,1,opt,name=item_per_page,json=itemPerPage,proto3" json:"item_per_page,omitempty"`
	PageNumbers          int32    `protobuf:"fixed32,2,opt,name=page_numbers,json=pageNumbers,proto3" json:"page_numbers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SensorPagination) Reset()         { *m = SensorPagination{} }
func (m *SensorPagination) String() string { return proto.CompactTextString(m) }
func (*SensorPagination) ProtoMessage()    {}
func (*SensorPagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{3}
}

func (m *SensorPagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorPagination.Unmarshal(m, b)
}
func (m *SensorPagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorPagination.Marshal(b, m, deterministic)
}
func (m *SensorPagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorPagination.Merge(m, src)
}
func (m *SensorPagination) XXX_Size() int {
	return xxx_messageInfo_SensorPagination.Size(m)
}
func (m *SensorPagination) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorPagination.DiscardUnknown(m)
}

var xxx_messageInfo_SensorPagination proto.InternalMessageInfo

func (m *SensorPagination) GetItemPerPage() int32 {
	if m != nil {
		return m.ItemPerPage
	}
	return 0
}

func (m *SensorPagination) GetPageNumbers() int32 {
	if m != nil {
		return m.PageNumbers
	}
	return 0
}

type SensorFilterAndPagination struct {
	SensorFilter         *SensorFilter     `protobuf:"bytes,1,opt,name=sensor_filter,json=sensorFilter,proto3" json:"sensor_filter,omitempty"`
	SensorPagination     *SensorPagination `protobuf:"bytes,2,opt,name=sensor_pagination,json=sensorPagination,proto3" json:"sensor_pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SensorFilterAndPagination) Reset()         { *m = SensorFilterAndPagination{} }
func (m *SensorFilterAndPagination) String() string { return proto.CompactTextString(m) }
func (*SensorFilterAndPagination) ProtoMessage()    {}
func (*SensorFilterAndPagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{4}
}

func (m *SensorFilterAndPagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorFilterAndPagination.Unmarshal(m, b)
}
func (m *SensorFilterAndPagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorFilterAndPagination.Marshal(b, m, deterministic)
}
func (m *SensorFilterAndPagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorFilterAndPagination.Merge(m, src)
}
func (m *SensorFilterAndPagination) XXX_Size() int {
	return xxx_messageInfo_SensorFilterAndPagination.Size(m)
}
func (m *SensorFilterAndPagination) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorFilterAndPagination.DiscardUnknown(m)
}

var xxx_messageInfo_SensorFilterAndPagination proto.InternalMessageInfo

func (m *SensorFilterAndPagination) GetSensorFilter() *SensorFilter {
	if m != nil {
		return m.SensorFilter
	}
	return nil
}

func (m *SensorFilterAndPagination) GetSensorPagination() *SensorPagination {
	if m != nil {
		return m.SensorPagination
	}
	return nil
}

type SensorResponse struct {
	Sensors              []*Sensor `protobuf:"bytes,1,rep,name=sensors,proto3" json:"sensors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SensorResponse) Reset()         { *m = SensorResponse{} }
func (m *SensorResponse) String() string { return proto.CompactTextString(m) }
func (*SensorResponse) ProtoMessage()    {}
func (*SensorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{5}
}

func (m *SensorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorResponse.Unmarshal(m, b)
}
func (m *SensorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorResponse.Marshal(b, m, deterministic)
}
func (m *SensorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorResponse.Merge(m, src)
}
func (m *SensorResponse) XXX_Size() int {
	return xxx_messageInfo_SensorResponse.Size(m)
}
func (m *SensorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SensorResponse proto.InternalMessageInfo

func (m *SensorResponse) GetSensors() []*Sensor {
	if m != nil {
		return m.Sensors
	}
	return nil
}

type EditRequest struct {
	Sensors              []*Sensor `protobuf:"bytes,1,rep,name=sensors,proto3" json:"sensors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EditRequest) Reset()         { *m = EditRequest{} }
func (m *EditRequest) String() string { return proto.CompactTextString(m) }
func (*EditRequest) ProtoMessage()    {}
func (*EditRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6783724e039e1aa6, []int{6}
}

func (m *EditRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditRequest.Unmarshal(m, b)
}
func (m *EditRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditRequest.Marshal(b, m, deterministic)
}
func (m *EditRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditRequest.Merge(m, src)
}
func (m *EditRequest) XXX_Size() int {
	return xxx_messageInfo_EditRequest.Size(m)
}
func (m *EditRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditRequest proto.InternalMessageInfo

func (m *EditRequest) GetSensors() []*Sensor {
	if m != nil {
		return m.Sensors
	}
	return nil
}

func init() {
	proto.RegisterType((*Sensor)(nil), "processor.Sensor")
	proto.RegisterType((*ProcessResponse)(nil), "processor.ProcessResponse")
	proto.RegisterType((*SensorFilter)(nil), "processor.SensorFilter")
	proto.RegisterType((*SensorPagination)(nil), "processor.SensorPagination")
	proto.RegisterType((*SensorFilterAndPagination)(nil), "processor.SensorFilterAndPagination")
	proto.RegisterType((*SensorResponse)(nil), "processor.SensorResponse")
	proto.RegisterType((*EditRequest)(nil), "processor.EditRequest")
}

func init() { proto.RegisterFile("processor.proto", fileDescriptor_6783724e039e1aa6) }

var fileDescriptor_6783724e039e1aa6 = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x6a, 0xdb, 0x40,
	0x10, 0xc6, 0xb3, 0x76, 0xe2, 0xe0, 0x51, 0x52, 0x3b, 0x4b, 0x49, 0x15, 0xe5, 0x10, 0x75, 0x29,
	0x54, 0x50, 0x50, 0x5a, 0xf5, 0x12, 0xfa, 0x0f, 0x0a, 0x4d, 0x9b, 0x53, 0x31, 0xdb, 0x50, 0xe8,
	0x49, 0xc8, 0xf5, 0xc4, 0x08, 0x24, 0xed, 0x56, 0xbb, 0x2e, 0xf8, 0x1d, 0xfa, 0x16, 0xbd, 0xf5,
	0x29, 0xcb, 0x6a, 0x25, 0x59, 0xb1, 0xf0, 0x21, 0x37, 0xed, 0x37, 0xdf, 0xcc, 0xfc, 0x76, 0x66,
	0x05, 0x13, 0x59, 0x8a, 0x9f, 0xa8, 0x94, 0x28, 0x43, 0x59, 0x0a, 0x2d, 0xe8, 0xb8, 0x15, 0xbc,
	0x8b, 0xa5, 0x10, 0xcb, 0x0c, 0x2f, 0xab, 0xc0, 0x7c, 0x75, 0x77, 0xa9, 0xd3, 0x1c, 0x95, 0x4e,
	0x72, 0x69, 0xbd, 0xde, 0xf9, 0xb6, 0x01, 0x73, 0xa9, 0xd7, 0x36, 0xc8, 0xfe, 0x11, 0x18, 0x7d,
	0xc3, 0x42, 0x89, 0x92, 0x3e, 0x85, 0x23, 0x55, 0x7d, 0xc5, 0xbf, 0x93, 0x6c, 0x85, 0x2e, 0xf1,
	0x49, 0x30, 0xe0, 0x8e, 0xd5, 0xbe, 0x1b, 0x89, 0x5e, 0x40, 0x7d, 0x8c, 0xf5, 0x5a, 0xa2, 0x3b,
	0xf0, 0x49, 0x30, 0xe6, 0x60, 0xa5, 0xdb, 0xb5, 0x44, 0x3a, 0x85, 0x61, 0xba, 0x78, 0xe5, 0x0e,
	0xab, 0x80, 0xf9, 0xb4, 0x4a, 0xe4, 0xee, 0xfb, 0x24, 0x98, 0x18, 0x25, 0xa2, 0x57, 0x30, 0x6e,
	0x11, 0xdd, 0x03, 0x9f, 0x04, 0x4e, 0xe4, 0x85, 0x96, 0x31, 0x6c, 0x18, 0xc3, 0xdb, 0xc6, 0xc1,
	0x37, 0x66, 0xf6, 0x1c, 0x26, 0x33, 0x7b, 0x6f, 0x8e, 0x4a, 0x8a, 0x42, 0x21, 0x7d, 0x0c, 0x07,
	0x5a, 0xe8, 0x24, 0xab, 0x68, 0x27, 0xdc, 0x1e, 0x58, 0x06, 0x47, 0xf6, 0x52, 0x9f, 0xd3, 0x4c,
	0x63, 0xd9, 0x60, 0x91, 0x1e, 0xd6, 0x60, 0x07, 0xd6, 0xf0, 0x21, 0x58, 0x3f, 0x60, 0x6a, 0xbb,
	0xcd, 0x92, 0x65, 0x5a, 0x24, 0x3a, 0x15, 0x05, 0x65, 0x70, 0x9c, 0x6a, 0xcc, 0x63, 0x89, 0x65,
	0x2c, 0x93, 0x25, 0xd6, 0x7c, 0x8e, 0x11, 0x67, 0x68, 0x9c, 0x68, 0x06, 0x6e, 0x42, 0x71, 0xb1,
	0xca, 0xe7, 0x58, 0xaa, 0x1a, 0xc6, 0x31, 0xda, 0x57, 0x2b, 0xb1, 0xbf, 0x04, 0xce, 0xba, 0x37,
	0xf9, 0x58, 0x2c, 0x3a, 0x4d, 0xde, 0xc1, 0x71, 0xbd, 0x8e, 0xbb, 0x2a, 0x5a, 0x35, 0x71, 0xa2,
	0x27, 0xe1, 0xe6, 0xb9, 0x74, 0x93, 0x79, 0xbd, 0xdf, 0x7a, 0x28, 0x37, 0x70, 0x52, 0x67, 0xcb,
	0xb6, 0x64, 0xc5, 0xe0, 0x44, 0xe7, 0xbd, 0x0a, 0x9b, 0xae, 0x7c, 0xaa, 0xb6, 0x14, 0xf6, 0x1e,
	0x1e, 0x59, 0x57, 0xbb, 0x96, 0x17, 0x70, 0x68, 0x5d, 0xca, 0x25, 0xfe, 0x30, 0x70, 0xa2, 0x93,
	0x5e, 0x45, 0xde, 0x38, 0xd8, 0x1b, 0x70, 0xae, 0x17, 0xa9, 0xe6, 0xf8, 0x6b, 0x85, 0x4a, 0x3f,
	0x28, 0x37, 0xfa, 0x33, 0x80, 0xf1, 0xac, 0x89, 0xd2, 0x0f, 0x70, 0x58, 0x1f, 0x68, 0x3f, 0xc9,
	0xf3, 0x3a, 0xd2, 0xd6, 0x3b, 0x62, 0x7b, 0x01, 0x79, 0x49, 0xe8, 0x0d, 0x0c, 0xbf, 0xa0, 0xa6,
	0xcf, 0x76, 0x0c, 0xf0, 0xde, 0xf4, 0xbd, 0xb3, 0x3e, 0x56, 0x5b, 0x8d, 0xbe, 0x85, 0xd1, 0x27,
	0xcc, 0x50, 0x23, 0xdd, 0xb5, 0x0d, 0xef, 0xb4, 0xf7, 0xba, 0xae, 0xcd, 0x8f, 0xc9, 0xf6, 0xe8,
	0x15, 0xec, 0x9b, 0x81, 0xd0, 0xd3, 0x4e, 0x6a, 0x67, 0x42, 0xbb, 0x33, 0xe7, 0xa3, 0x4a, 0x79,
	0xfd, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x54, 0xe1, 0x62, 0x31, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProcessorClient is the client API for Processor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProcessorClient interface {
	// Process process sensor data stream and return amount processed
	Process(ctx context.Context, opts ...grpc.CallOption) (Processor_ProcessClient, error)
	// Get returns sensor data based on filter and pagination
	Get(ctx context.Context, in *SensorFilterAndPagination, opts ...grpc.CallOption) (*SensorResponse, error)
	// Delete deletes sensor in the database based on filter
	Delete(ctx context.Context, in *SensorFilter, opts ...grpc.CallOption) (*empty.Empty, error)
	// Edit updates sensor in the database based on filter
	Edit(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type processorClient struct {
	cc *grpc.ClientConn
}

func NewProcessorClient(cc *grpc.ClientConn) ProcessorClient {
	return &processorClient{cc}
}

func (c *processorClient) Process(ctx context.Context, opts ...grpc.CallOption) (Processor_ProcessClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Processor_serviceDesc.Streams[0], "/processor.Processor/Process", opts...)
	if err != nil {
		return nil, err
	}
	x := &processorProcessClient{stream}
	return x, nil
}

type Processor_ProcessClient interface {
	Send(*Sensor) error
	Recv() (*ProcessResponse, error)
	grpc.ClientStream
}

type processorProcessClient struct {
	grpc.ClientStream
}

func (x *processorProcessClient) Send(m *Sensor) error {
	return x.ClientStream.SendMsg(m)
}

func (x *processorProcessClient) Recv() (*ProcessResponse, error) {
	m := new(ProcessResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *processorClient) Get(ctx context.Context, in *SensorFilterAndPagination, opts ...grpc.CallOption) (*SensorResponse, error) {
	out := new(SensorResponse)
	err := c.cc.Invoke(ctx, "/processor.Processor/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processorClient) Delete(ctx context.Context, in *SensorFilter, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/processor.Processor/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *processorClient) Edit(ctx context.Context, in *EditRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/processor.Processor/Edit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProcessorServer is the server API for Processor service.
type ProcessorServer interface {
	// Process process sensor data stream and return amount processed
	Process(Processor_ProcessServer) error
	// Get returns sensor data based on filter and pagination
	Get(context.Context, *SensorFilterAndPagination) (*SensorResponse, error)
	// Delete deletes sensor in the database based on filter
	Delete(context.Context, *SensorFilter) (*empty.Empty, error)
	// Edit updates sensor in the database based on filter
	Edit(context.Context, *EditRequest) (*empty.Empty, error)
}

// UnimplementedProcessorServer can be embedded to have forward compatible implementations.
type UnimplementedProcessorServer struct {
}

func (*UnimplementedProcessorServer) Process(srv Processor_ProcessServer) error {
	return status.Errorf(codes.Unimplemented, "method Process not implemented")
}
func (*UnimplementedProcessorServer) Get(ctx context.Context, req *SensorFilterAndPagination) (*SensorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedProcessorServer) Delete(ctx context.Context, req *SensorFilter) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedProcessorServer) Edit(ctx context.Context, req *EditRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Edit not implemented")
}

func RegisterProcessorServer(s *grpc.Server, srv ProcessorServer) {
	s.RegisterService(&_Processor_serviceDesc, srv)
}

func _Processor_Process_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProcessorServer).Process(&processorProcessServer{stream})
}

type Processor_ProcessServer interface {
	Send(*ProcessResponse) error
	Recv() (*Sensor, error)
	grpc.ServerStream
}

type processorProcessServer struct {
	grpc.ServerStream
}

func (x *processorProcessServer) Send(m *ProcessResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *processorProcessServer) Recv() (*Sensor, error) {
	m := new(Sensor)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Processor_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SensorFilterAndPagination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processor.Processor/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorServer).Get(ctx, req.(*SensorFilterAndPagination))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processor_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SensorFilter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processor.Processor/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorServer).Delete(ctx, req.(*SensorFilter))
	}
	return interceptor(ctx, in, info, handler)
}

func _Processor_Edit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProcessorServer).Edit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/processor.Processor/Edit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProcessorServer).Edit(ctx, req.(*EditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Processor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "processor.Processor",
	HandlerType: (*ProcessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Processor_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Processor_Delete_Handler,
		},
		{
			MethodName: "Edit",
			Handler:    _Processor_Edit_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Process",
			Handler:       _Processor_Process_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "processor.proto",
}
