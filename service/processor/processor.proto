syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package processor;

service Processor {
  // Process process sensor data stream and return amount processed
  rpc Process(stream Sensor) returns (stream ProcessResponse) {}

  // Get returns sensor data based on filter and pagination
  rpc Get(SensorFilterAndPagination) returns (SensorResponse) {}

  // Delete deletes sensor in the database based on filter
  rpc Delete(SensorFilter) returns (google.protobuf.Empty) {}

  // Edit updates sensor in the database based on filter
  rpc Edit(EditRequest) returns (google.protobuf.Empty) {}
}

// A Sensor is generated in response to a Start rpc
//
// It contains value, type, and identifier to be later sent to processor
message Sensor {
  float sensor_value = 1;
  string sensor_type = 2;
  string id1 = 3;
  sfixed32 id2 = 4;
  google.protobuf.Timestamp timestamp = 5;
}

// ProcessResponse returns total data processed
message ProcessResponse {
  sfixed32 total = 1;
}

// SensorFilter specify filters available
message SensorFilter {
  string id1 = 1;
  sfixed32 id2 = 2;
  google.protobuf.Timestamp timestamp = 3;
}

// SensorPagination defines pagination specification
message SensorPagination {
  sfixed32 item_per_page = 1;
  sfixed32 page_numbers = 2;
}

message SensorFilterAndPagination {
  SensorFilter sensor_filter = 1;
  SensorPagination sensor_pagination = 2;
}

message SensorResponse {
  repeated Sensor sensors = 1;
}

message EditRequest {
  repeated Sensor sensors = 1;
}